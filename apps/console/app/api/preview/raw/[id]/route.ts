import fs from 'fs'
import path from 'path'
import { NextResponse } from 'next/server'

export async function GET(req: Request, { params }: { params: { id: string } }) {
  const id = params.id
  const file = path.join(process.cwd(), 'generated', id, 'site.json')
  if (!fs.existsSync(file)) return NextResponse.json({ error: 'Not found' }, { status: 404 })
  const site = JSON.parse(fs.readFileSync(file, 'utf8'))

  const title = (site.title || site.layout?.title || 'Demo Site')
  const headline = site.copy?.headline || site.copy?.en?.headline || 'Welcome'
  const cta = site.copy?.cta || site.copy?.en?.cta || 'Contact'
  const sections = site.layout?.sections || ['hero', 'services', 'contact']
  const theme = site.layout?.theme || { colors: ['#0ea5a4', '#06b6d4', '#0f172a'], font: 'Inter' }

  const colors = (theme.colors || []).slice(0,3)
  const primary = colors[0] || '#0ea5a4'
  const accent = colors[1] || '#06b6d4'

  const html = `<!doctype html>
  <html>
    <head>
      <meta charset="utf-8" />
      <meta name="viewport" content="width=device-width,initial-scale=1" />
      <title>${escapeHtml(title)}</title>
      <style>
        body{font-family: ${escapeHtml(theme.font || 'system-ui')}, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial; margin:0;color:#0f172a}
        .hero{padding:64px 24px;text-align:center;background:linear-gradient(90deg, ${primary}, ${accent});color:#fff}
        .container{max-width:900px;margin:0 auto;padding:24px}
        .card{background:#fff;border-radius:8px;padding:18px;box-shadow:0 6px 20px rgba(15,23,42,0.06);margin:18px 0}
        .cta{display:inline-block;margin-top:12px;padding:10px 18px;background:#111;color:#fff;border-radius:6px;text-decoration:none}
        .watermark{position:fixed;left:0;top:0;right:0;bottom:0;pointer-events:none;display:flex;align-items:center;justify-content:center;opacity:0.10;font-size:32px;transform:rotate(-25deg)}
      </style>
    </head>
    <body>
      <section class="hero">
        <div class="container">
          <h1 style="font-size:40px;margin:0">${escapeHtml(headline)}</h1>
          <p style="opacity:0.95;margin-top:12px">${escapeHtml(site.copy?.subhead || site.copy?.en?.subhead || '')}</p>
          <a class="cta" href="#contact">${escapeHtml(cta)}</a>
        </div>
      </section>
      <main class="container">
        ${sections.map((s: string) => renderSection(s, site)).join('\n')}
      </main>
      ${site.watermark ? `<div class="watermark">Generated by WebCreate â€¢ Sample</div>` : ''}
    </body>
  </html>`

  return new Response(html, { headers: { 'Content-Type': 'text/html' } })
}

function renderSection(name: string, site: any) {
  switch (name) {
    case 'hero': return `<section class="card"><h2>${escapeHtml(site.layout?.title || '')}</h2><p>${escapeHtml(site.copy?.headline || '')}</p></section>`
    case 'services': return `<section class="card"><h3>Services</h3><ul>${(site.copy?.services || ['Service A','Service B']).map((s:string)=>`<li>${escapeHtml(s)}</li>`).join('')}</ul></section>`
    case 'gallery': return `<section class="card"><h3>Gallery</h3><p>Sample gallery content.</p></section>`
    case 'pricing': return `<section class="card"><h3>Pricing</h3><p>Starting at $XX/month.</p></section>`
    case 'map': return `<section class="card"><h3>Location</h3><p>We are here.</p></section>`
    case 'contact': return `<section id="contact" class="card"><h3>Contact</h3><p><a href="mailto:hello@example.com">hello@example.com</a></p></section>`
    default: return `<section class="card"><h3>${escapeHtml(name)}</h3><p>Placeholder content.</p></section>`
  }
}

function escapeHtml(s:any) {
  if (!s) return ''
  return String(s).replace(/[&<>"']/g, (c) => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'} as any)[c])
}
